version: '3.8'

services:
  # Service Frontend (React/Vite)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - VITE_SUPABASE_URL=${VITE_SUPABASE_URL:-https://example.supabase.co}
        - VITE_SUPABASE_ANON_KEY=${VITE_SUPABASE_ANON_KEY:-your-anon-key}
    container_name: ${COMPOSE_PROJECT_NAME:-azur-auto-reserve}_frontend
    restart: always
    environment:
      - VITE_SUPABASE_URL=${VITE_SUPABASE_URL:-https://example.supabase.co}
      - VITE_SUPABASE_ANON_KEY=${VITE_SUPABASE_ANON_KEY:-your-anon-key}
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/index.html"]
      interval: 60s
      timeout: 5s
      retries: 3
    networks:
      - traefik-public
    labels:
      # Traefik configuration
      - traefik.enable=true
      # Frontend route (domain root)
      - traefik.http.routers.${COMPOSE_PROJECT_NAME:-azur-auto-reserve}-frontend.rule=Host(`${DOMAIN:-localhost}`)
      - traefik.http.routers.${COMPOSE_PROJECT_NAME:-azur-auto-reserve}-frontend.entrypoints=websecure
      - traefik.http.routers.${COMPOSE_PROJECT_NAME:-azur-auto-reserve}-frontend.tls.certresolver=letsencrypt
      - traefik.http.services.${COMPOSE_PROJECT_NAME:-azur-auto-reserve}-frontend.loadbalancer.server.port=80
      # Compression
      - traefik.http.middlewares.${COMPOSE_PROJECT_NAME:-azur-auto-reserve}-frontend-compress.compress=true
      - traefik.http.routers.${COMPOSE_PROJECT_NAME:-azur-auto-reserve}-frontend.middlewares=${COMPOSE_PROJECT_NAME:-azur-auto-reserve}-frontend-compress
      # Coolify specific labels
      - coolify.managed=true
      - coolify.healthcheck=enabled

  # Service Backend (Supabase Edge Functions)
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: ${COMPOSE_PROJECT_NAME:-azur-auto-reserve}_edge_functions
    restart: always
    environment:
      # Variables d'environnement Supabase
      - JWT_SECRET=${JWT_SECRET}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - SUPABASE_DB_URL=${SUPABASE_DB_URL}
      # Paramètre pour vérifier JWT
      - VERIFY_JWT=${VERIFY_JWT:-false}
      # Variables d'environnement supplémentaires peuvent être ajoutées ici
      # Paramètres de débogage
      - DEBUG=${DEBUG:-false}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/functions/v1/hello"]
      timeout: 5s
      interval: 5s
      retries: 3
    networks:
      - traefik-public
    labels:
      # Traefik configuration
      - traefik.enable=true
      # Backend route (functions/v1 path)
      - traefik.http.routers.${COMPOSE_PROJECT_NAME:-azur-auto-reserve}-backend.rule=Host(`${DOMAIN:-localhost}`) && PathPrefix(`/functions/v1`)
      - traefik.http.routers.${COMPOSE_PROJECT_NAME:-azur-auto-reserve}-backend.entrypoints=websecure
      - traefik.http.routers.${COMPOSE_PROJECT_NAME:-azur-auto-reserve}-backend.tls.certresolver=letsencrypt
      - traefik.http.services.${COMPOSE_PROJECT_NAME:-azur-auto-reserve}-backend.loadbalancer.server.port=9000
      # Coolify specific labels
      - coolify.managed=true
      - coolify.healthcheck=enabled

networks:
  traefik-public:
    external: true
